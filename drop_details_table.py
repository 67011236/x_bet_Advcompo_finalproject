#!/usr/bin/env python3
"""
Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö table 'details' ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
"""

import sqlite3
import os

def drop_details_table():
    """‡∏•‡∏ö table 'details' ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"""
    
    # ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    db_path = os.path.join("backend", "dev.db")
    
    if not os.path.exists(db_path):
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {db_path}")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ table details ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='details'")
        details_exists = cursor.fetchone()
        
        if not details_exists:
            print("‚ÑπÔ∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö table 'details' ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
            return True
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô details table ‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö
        cursor.execute("SELECT COUNT(*) as count FROM details")
        record_count = cursor.fetchone()[0]
        
        if record_count > 0:
            print(f"‚ö†Ô∏è  Table 'details' ‡∏°‡∏µ {record_count} records")
            print("üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á:")
            cursor.execute("SELECT * FROM details")
            records = cursor.fetchall()
            for record in records:
                print(f"   - {record}")
            
            response = input(f"\n‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö table 'details' ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î? (y/N): ")
            if response.lower() != 'y':
                print("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏ö table")
                return False
        else:
            print("üìù Table 'details' ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
            response = input("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö table 'details' ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/N): ")
            if response.lower() != 'y':
                print("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏ö table")
                return False
        
        # ‡∏•‡∏ö table details
        print("üóëÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö table 'details'...")
        cursor.execute("DROP TABLE details")
        conn.commit()
        
        print("‚úÖ ‡∏•‡∏ö table 'details' ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö tables ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
        print("\nüìä Tables ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:")
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        remaining_tables = cursor.fetchall()
        
        for table in remaining_tables:
            table_name = table[0]
            cursor.execute(f"SELECT COUNT(*) as count FROM {table_name}")
            count = cursor.fetchone()[0]
            print(f"   - {table_name}: {count} records")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False
    
    finally:
        if 'conn' in locals():
            conn.close()

if __name__ == "__main__":
    print("üóëÔ∏è  Drop Table Tool: ‡∏•‡∏ö table 'details'")
    print("=" * 50)
    
    success = drop_details_table()
    
    if success:
        print("\n‚úÖ ‡∏Å‡∏≤‡∏£‡∏•‡∏ö table ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
        print("üí° ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÉ‡∏ä‡πâ table 'credit' ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• balance")
    else:
        print("\n‚ùå ‡∏Å‡∏≤‡∏£‡∏•‡∏ö table ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")